// convert time into milliseconds

function past(h, m, s){
  //#Happy Coding! ^_^
  
  convertHours = (h * 60 * 60 * 1000);
  convertMinutes = (m * 60 * 1000);
  convertSeconds = (s * 1000);
  
  result = convertHours + convertMinutes + convertSeconds;
  return result;
}

// we multiply numbers by 60 to convert them into smaller parts of a whole (minutes -> seconds)
// we then multiply by 1000 because there are 1000 ms in a s rather than 60 s in a m.





// greet who?

function greet (name, owner) {
  // Add code here
  if (name == owner) {
    return 'Hello boss';
  }
  return 'Hello guest';
}





// how to reverse the characters then words in a string

function reverseWords(str) {
  // Go for it
  
  return str.split('').reverse().join('').split(' ').reverse().join(' ');
  // this returns the string first split at each character (including spaces), then each
  // character is reversed, following by the characters being joined together.
  // then we repeat those steps but we start by seperating at each word then reversing the
  // words.
}





// converts a number to a stringer

function numberToString(num) {
  // Return a string of the number here!
  
return num.toString();
// the .toString() converts numbers into strings.
}





// javascript even or odd number

function even_or_odd(number) {
  if ((number % 2) == 0) {
    return "Even"
  }
  return "Odd"
}





// javascript rock, paper, scissors

const rps = (p1, p2) => {
 if (p1 == p2) {
   return "Draw!";
 }else if (p1 == 'rock' && p2 == 'scissors') {
   return "Player 1 won!";
 }else if (p1 == 'paper' && p2 == 'rock') {
   return "Player 1 won!";
 }else if (p1 == 'scissors' && p2 == 'paper') {
   return "Player 1 won!";
}else {
  return "Player 2 won!";
}
};





// golf game scores

const names = ["Hole-in-one!", "Eagle", "Birdie", "Par", "Bogey", "Double Bogey", "Go Home!"];

function golfScore(par, strokes) {
  // Only change code below this line
  if (strokes == 1) {
    return "Hole-in-one!"
  } else if (strokes <= (par - 2)){
    return "Eagle"
  } else if (strokes == (par - 1)) {
    return "Birdie"
  } else if (strokes == par) {
    return "Par"
  } else if (strokes == (par + 1)) {
    return "Bogey"
  } else if (strokes == (par + 2)) {
    return "Double Bogey"
  } else if (strokes >= (par + 3)) {
    return "Go Home!"
  }else {

  return "Change Me";
  // Only change code above this line
}
}
golfScore(5, 4);




// pull the middle letters of a string out of the string and only pull 1 if odd or 2 if even

function getMiddle(s) {
  //Code goes here!
  let position
  let length
  
  if (s.length % 2 == 1) {
    position = s.length / 2;
    length = 1;
  } else {
    position = s.length / 2 - 1;
    length = 2;
  }
  

  // the .substring method is used to create a string out of a string using certain parameters
  return s.substring(position, position + length);

}




// convert a string to a number using parseInt()

var stringToNumber = function(str){
  // put your code here
  return parseInt(str)
}




// sums up three grades and divides them for an average, then gives the grades

function getGrade (s1, s2, s3) {
  // Code here
  average = (s1 + s2 + s3) / 3;
  if (average >= 90 && average <= 100) {
    return 'A';
  } else if (average >= 80 && average < 90) {
    return 'B';
  } else if (average >= 70  && average < 80) {
    return 'C';
  } else if (average >= 60 && average < 70) {
    return 'D';
  } else {
    return 'F';
  }
}





// remove character from a string

// first we set our new string equal to each individual character of the original string
// then we use newStr.shift(); to remove the first character of the string.
// then we use the newStr.pop() to remove the last character of the string.
// then we return newStr.join("") to return the string as a one complete string.

function removeChar(str){
 //You got this!
  newStr = str.split("");
  newStr.shift();
  newStr.pop();
  return newStr.join("");
  
};





// double a given integer

function doubleInteger(i) {
  // i will be an integer. Double it and return it.
  i = i * 2;
  return i;
}





// count and array of sheep filled with true and false, true meaning there's a sheep there.

function countSheeps(arrayOfSheep) {
  // TODO May the force be with you

  var num = 0;
  for (let i = 0; i < arrayOfSheep.length; i++) {
    if (arrayOfSheep[i] == true) {
      num++;
    }
  }
  return num;
}





//does the string have the same amount of x's and o's irrelavent to capitalization

function XO(str) {
    //code here
  
  let o = 0;
  let x = 0;
  
  // we create a for loop so that it can run as long as there's more in the array
  // we use .toLowerCase() to change the string to all lower case to account for case;
  // at the end we return the comparison between the count for x and the count for o 
  
  for (let i = 0; i < str.length; i++) {
    if (str[i].toLowerCase() == "o") {
      o++;
    } else if (str[i].toLowerCase() == "x") {
      x++;
    }
  }
  
  return x == o;
}





// create a function that returns 'hello world!'

function greet() {
    return "hello world!";
  }




// make the first letter of each word in a string capitalized (JadenCase)

String.prototype.toJadenCase = function () {
  
  // we declare new string to put in the desired contents
  var newStr = "";
  
  
  // we split the inputed string at each space between words
  // we use forEach to say that for each str item given in the variable
    // newStr will = newStr + space + strings and use toUpperCase() to capitalize the first letters of each word
  // we must then add that new string to the old string IN the new array.
  this.split(" ").forEach(function(s) { 
      newStr = newStr + " " + s.substring(0,1).toUpperCase() + s.substring(1); 
  });

  return newStr.substr(1);
};




function areYouPlayingBanjo(name) {
  // Implement me
  if (name.charAt(0) == "R" || name.charAt(0) == "r") {
    return name + " plays banjo";
  } else {
  return name + " does not play banjo";;
    }
}





// return the shortest word from an array 

function findShort(s){
  let arr = s.split(" ").sort((a, b) => a.length - b.length);
  return arr[0].length;
}
